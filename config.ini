[DEFAULT]
# Address of the RabbitMQ host (for all except client)
RabbitHost = rabbitmq
# DEBUG, INFO, WARNING, ERROR, CRITICAL
LogLevel = INFO
# Number of messages to prefetch from RabbitMQ
# (for all except input and client)
PrefetchCount = 50

# CLIENT

[client]
BatchSize = 1000
# Address of the input host
InputAddress = tcp://input:5555
# Address of the output host
OutputAddress = tcp://output:5555
# Path to the data directory
DataPath = /tmp/data/full
# Path to the results directory
ResultsPath = /tmp/results

# INPUT

[input]
BatchSize = 3000
# Address to bind to
Address = tcp://*:5555


# PARSERS

[parsers]
BatchSize = 3000

# JOINERS

[joiners.rain]
BatchSize = 3000
# Drop trips on days with less than this mm of rain
PrecipitationThreshold = 30
ParsersCount = ${PARSERS_SCALE} 

[joiners.year]
BatchSize = 3000
# Base year for comparison
YearBase = 2016
# Year to compare to the base year
YearCompared = 2017
ParsersCount = ${PARSERS_SCALE}

[joiners.city]
BatchSize = 3000
# City to filter on
City = montreal
ParsersCount = ${PARSERS_SCALE}

# AGGREGATORS

[aggregators.rain]
# Interval at which to send the aggregated data
SendIntervalSeconds = 10
JoinersCount = ${RAIN_JOINERS_SCALE}

[aggregators.year]
SendIntervalSeconds = 10
YearBase = ${joiners.year:YearBase}
YearCompared = ${joiners.year:YearCompared}
JoinersCount = ${YEAR_JOINERS_SCALE}

[aggregators.city]
SendIntervalSeconds = 10
JoinersCount = ${CITY_JOINERS_SCALE}

# REDUCERS

[reducers.rain]
AggregatorsCount = ${RAIN_AGGREGATORS_SCALE}

[reducers.year]
# Factor to filter with. Keeps stations if (Trips in compared year) > Factor * (Trips in base year) 
Factor = 2
AggregatorsCount = ${YEAR_AGGREGATORS_SCALE}

[reducers.city]
# Minimum distance between stations in km to filter on
MinDistanceKm = 6
AggregatorsCount = ${CITY_AGGREGATORS_SCALE}

# OUTPUT

[output]
# Address to bind to
Address = tcp://*:5555

